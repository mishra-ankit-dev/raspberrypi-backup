>>> numbers = [0,1,2,3,4,5,6,7,8,9]
>>> for num in numbers:
	print(num)

	
0
1
2
3
4
5
6
7
8
9
>>> for num in numbers:
	if not num==8:
		if num%2:
			print(num)

			
1
3
5
7
9
>>> for num in numbers:
	if not num==8:
		if num%2==0:
			print(num)

			
0
2
4
6
>>> class Vehicle():
	name = ""
	kind = "car"
	color = "'
	
SyntaxError: EOL while scanning string literal
>>> class Vehicle():
	name = ""
	kind = "car"
	color = ""
	value = "100.0"

	
>>> class Vehicle():
	name = ""
	kind = "car"
	color = ""
	value = "100.0"
	def description(self):
		desc_str = "{} is a {} {} worth ${}".format(self.name,self.color,self.kind,self.value)
		return desc_str
car1 = Vehicle()
SyntaxError: invalid syntax
>>> class Vehicle():
	name = ""
	kind = "car"
	color = ""
	value = "100.0"
	def description(self):
		desc_str = "{} is a {} {} worth ${}".format(self.name,self.color,self.kind,self.value)
		return desc_str
	car1 = Vehicle()
	car2 = Vehicle()
	car1.name = "fer"
	print(car1.name)

	
fer
>>> class Vehicle():
	name = ""
	kind = "car"
	color = ""
	value = "100.0"
	def description(self):
		desc_str = "{} is a {} {} worth ${}".format(self.name,self.color,self.kind,self.value)
		return desc_str
	car1 = Vehicle()
	car2 = Vehicle()
	car1.name = "fer"
	car1.color = "red"
	car1.value = "60,000.00"
	car2.name = "jump"
	car2.color = "blue"
	car2.value = "10,000.00"
	print(car1.description())
	print(car2.description())

	
fer is a red car worth $60,000.00
jump is a blue car worth $10,000.00
>>> class Vehicle():
	name = ""
	kind = "car"
	color = ""
	value = "100.0"
	def description(self):
		desc_str = "{} is a {} {} worth ${}".format(self.name,self.color,self.kind,self.value)
		return desc_str
	car1 = Vehicle()
	car2 = Vehicle()
	car1.name = "fer"
	car1.kind = "convertible"
	car1.color = "red"
	car1.value = "60,000.00"
	car2.name = "jump"
	car2.kind = "van"
	car2.color = "blue"
	car2.value = "10,000.00"
	print(car1.description())
	print(car2.description())

	
fer is a red convertible worth $60,000.00
jump is a blue van worth $10,000.00
>>> 

